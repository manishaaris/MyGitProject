<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="6" total="11" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="29329" started-at="2019-11-14T05:14:13Z" finished-at="2019-11-14T05:14:43Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="29329" started-at="2019-11-14T05:14:13Z" finished-at="2019-11-14T05:14:43Z">
      <class name="org.homeproject.demo.BaseReportClass">
        <test-method status="PASS" signature="Setup()[pri:0, instance:org.homeproject.demo.BaseReportClass@458ad742]" name="Setup" is-config="true" duration-ms="113" started-at="2019-11-14T05:14:13Z" finished-at="2019-11-14T05:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="Clean()[pri:0, instance:org.homeproject.demo.BaseReportClass@458ad742]" name="Clean" is-config="true" duration-ms="222" started-at="2019-11-14T05:14:43Z" finished-at="2019-11-14T05:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Clean -->
      </class> <!-- org.homeproject.demo.BaseReportClass -->
      <class name="org.homeproject.demo.ParameterTest">
        <test-method status="PASS" signature="parameterTest1(java.lang.String)[pri:0, instance:org.homeproject.demo.ParameterTest@6a024a67]" name="parameterTest1" duration-ms="0" started-at="2019-11-14T05:14:43Z" finished-at="2019-11-14T05:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[manisha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterTest1 -->
        <test-method status="PASS" signature="GenerateReport(org.testng.ITestResult)[pri:0, instance:org.homeproject.demo.ParameterTest@6a024a67]" name="GenerateReport" is-config="true" duration-ms="1" started-at="2019-11-14T05:14:43Z" finished-at="2019-11-14T05:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parameterTest1 status=SUCCESS method=ParameterTest.parameterTest1(java.lang.String)[pri:0, instance:org.homeproject.demo.ParameterTest@6a024a67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateReport -->
      </class> <!-- org.homeproject.demo.ParameterTest -->
      <class name="org.homeproject.demo.loginTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="setUp" is-config="true" duration-ms="6820" started-at="2019-11-14T05:14:26Z" finished-at="2019-11-14T05:14:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="login1()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="login1" duration-ms="1" started-at="2019-11-14T05:14:33Z" finished-at="2019-11-14T05:14:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login1 -->
        <test-method status="PASS" signature="CleanUp()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="CleanUp" is-config="true" duration-ms="621" started-at="2019-11-14T05:14:33Z" finished-at="2019-11-14T05:14:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CleanUp -->
        <test-method status="PASS" signature="GenerateReport(org.testng.ITestResult)[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="GenerateReport" is-config="true" duration-ms="21" started-at="2019-11-14T05:14:34Z" finished-at="2019-11-14T05:14:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login1 status=SUCCESS method=loginTest.login1()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateReport -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="setUp" is-config="true" duration-ms="7118" started-at="2019-11-14T05:14:34Z" finished-at="2019-11-14T05:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="login2()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="login2" duration-ms="691" started-at="2019-11-14T05:14:41Z" finished-at="2019-11-14T05:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login2 -->
        <test-method status="PASS" signature="CleanUp()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="CleanUp" is-config="true" duration-ms="3" started-at="2019-11-14T05:14:41Z" finished-at="2019-11-14T05:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CleanUp -->
        <test-method status="PASS" signature="GenerateReport(org.testng.ITestResult)[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19]" name="GenerateReport" is-config="true" duration-ms="1" started-at="2019-11-14T05:14:41Z" finished-at="2019-11-14T05:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login2 status=SUCCESS method=loginTest.login2()[pri:0, instance:org.homeproject.demo.loginTest@6ea12c19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateReport -->
      </class> <!-- org.homeproject.demo.loginTest -->
      <class name="org.homeproject.demo.GetAllLinks">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="beforeMethod" is-config="true" duration-ms="12832" started-at="2019-11-14T05:14:13Z" finished-at="2019-11-14T05:14:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="f" duration-ms="549" started-at="2019-11-14T05:14:41Z" finished-at="2019-11-14T05:14:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="GenerateReport(org.testng.ITestResult)[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="GenerateReport" is-config="true" duration-ms="1" started-at="2019-11-14T05:14:42Z" finished-at="2019-11-14T05:14:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=GetAllLinks.f()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateReport -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="test2" duration-ms="649" started-at="2019-11-14T05:14:42Z" finished-at="2019-11-14T05:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="GenerateReport(org.testng.ITestResult)[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="GenerateReport" is-config="true" duration-ms="1" started-at="2019-11-14T05:14:43Z" finished-at="2019-11-14T05:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=GetAllLinks.test2()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GenerateReport -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.homeproject.demo.GetAllLinks@5afa04c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-14T05:14:43Z" finished-at="2019-11-14T05:14:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.homeproject.demo.GetAllLinks -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
